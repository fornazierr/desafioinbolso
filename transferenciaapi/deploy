#!/bin/sh
echo "Iniciando deploy do Modulo de Trasferencia"
DEPLOY="transferenciaapi"

echo "1 - Removendo build anterior"
rm -f ${DEPLOY}

echo "2 - Realizando novo build do Modulo"
go mod tidy
go build

echo "3 - Removendo imagem tar antiga"
rm -f ${DEPLOY}.tar.gz

echo "4 - Parando e removendo dockers, caso existam"
docker stop ${DEPLOY}
docker rm ${DEPLOY}

echo "5 - Excluindo imagem antiga, caso exista"
docker rmi inbolso/${DEPLOY}:1.0

echo "6 - Criando nova imagem docker"
docker build -t inbolso/${DEPLOY}:1.0 .

echo "7 - Gravando nova imagem em arquivo ${DEPLOY}.tar.gz"
docker save inbolso/${DEPLOY}:1.0 | gzip > ${DEPLOY}.tar.gz

echo "8 - Carregando imagem docker"
if [ -f "${DEPLOY}.tar.gz" ]
then
  docker rmi inbolso/${DEPLOY}:1.0
  zcat ${DEPLOY}.tar.gz | docker load
  rm -f ${DEPLOY}-old.tar.gz
  mv ${DEPLOY}.tar.gz ${DEPLOY}-old.tar.gz
fi

echo "9 - Exportando vari√°veis de ambiente"
INT_PORT=8080
EXT_PORT=15001
export DB_USER="postgres"
export DB_NAME="inbolso"
export DB_PASS="12345678"
export DB_PORT="5432"
export DB_HOST="inbolsodb"
export CONTA_API="http://127.0.0.1:15001"
export BOLETO_API="http://127.0.0.1:15003"

echo "10 - Iniciando docker ${DEPLOY}"
docker run --name ${DEPLOY} --hostname ${DEPLOY} -v /var/log:/var/log -p ${EXT_PORT}:${INT_PORT} --env DB_USER --env DB_NAME --env DB_PASS --env DB_HOST --env DB_PORT --env TRANFERENCIA_API -d inbolso/${DEPLOY}:1.0
docker network connect inbolso ${DEPLOY}
docker restart ${DEPLOY}